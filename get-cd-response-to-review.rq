prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
prefix foaf: <http://xmlns.com/foaf/0.1/>
prefix dct: <http://purl.org/dc/terms/>
prefix np: <http://www.nanopub.org/nschema#>
prefix npx: <http://purl.org/nanopub/x/>
prefix npa: <http://purl.org/nanopub/admin/>
prefix vp: <http://purl.org/nanopub/admin/hasValidSignatureForPublicKey>
prefix frbr: <http://purl.org/vocab/frbr/core#>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>
prefix pso: <http://purl.org/spar/pso/>

prefix lf: <https://w3id.org/linkflows/reviews/>

select distinct ?resp_np ?review_np where {
  graph ?submission_np_head {
    ?submission_np np:hasAssertion ?submission_np_assertion ;
      np:hasPublicationInfo ?submission_np_pubinfo .
  }
  graph ?submission_np_assertion {
    ?submitted_np frbr:partOf <https://w3id.org/linkflows/formalization-papers/DataScienceSpecialIssue> ;
      pso:withStatus pso:submitted .
  }
  graph ?submission_np_pubinfo {
    ?submission_np dct:creator ?__author_iri .
    bind(?__author_iri as ?author)
  }
  optional { ?__author_iri foaf:name ?authorLabel . }
  graph npa:graph {
    ?submission_np vp: ?pubkey .
  }
  optional {
#    graph npa:graph { ?newversion_submission vp: ?pubkey . }
    ?newversion_submission np:hasAssertion ?sa .  # TODO: move into npa:graph
    graph ?sa { ?newversion_submission npx:supersedes ?submission_np . }
  }
  filter not exists {
#    graph npa:graph { ?retraction vp: ?pubkey . }
    ?retraction np:hasAssertion ?sa .  # TODO: move into npa:graph
    graph ?sa { ?somebody npx:retracts ?submission_np . }
  }
  graph ?submitted_np_head {
    ?submitted_np np:hasAssertion ?submitted_np_assertion .
  }
  graph ?submitted_np_assertion {
    ?submitted_np_s ?submitted_np_p ?class .
  }
  graph ?sp_np_head {
    ?sp_np np:hasAssertion ?sp_np_assertion .
  }
  graph ?sp_np_assertion {
    ?spi ?p ?class .
  }
#  graph npa:graph {
#    ?sp_np vp: ?pubkey .
#  }
  graph ?class_np_head {
    ?class_np np:hasAssertion ?class_np_assertion ;
      np:hasPublicationInfo ?class_np_pubinfo .
  }
  graph ?class_np_assertion {
    ?class rdfs:label ?class_name .
  }
  graph ?class_np_pubinfo {
    ?class_np npx:introduces ?class .
  }
  filter not exists {
    graph ?class_np_pubinfo {
      ?class_np a npx:ExampleNanopub .
      }
  }
#  graph npa:graph {
#    ?class_np vp: ?pubkey .
#  }
  graph ?review_np_head {
    ?review_np np:hasAssertion ?review_np_assertion ;
      np:hasPublicationInfo ?review_np_pubinfo ;
      a np:Nanopublication .
  }
  graph ?review_np_assertion {
    ?r a lf:ReviewComment .
    ?r lf:refersTo ?class_np .
  }
  graph ?review_np_pubinfo {
    ?review_np dct:creator ?__reviewer_iri .
    bind(?__reviewer_iri as ?reviewer)
  }
#  graph npa:graph {
#    ?review_np vp: ?reviewer_pubkey .
#  }
  filter not exists {
    graph ?review_np_pubinfo {
      ?review_np a npx:ExampleNanopub .
    }
  }
  optional {
#    graph npa:graph { ?newversion_review vp: ?reviewer_pubkey . }
    ?newversion_review np:hasPublicationInfo ?ri .
    graph ?ri { ?newversion_review npx:supersedes ?review_np . }
  }
  filter not exists {
#    graph npa:graph { ?retraction_review vp: ?reviewer_pubkey . }
    ?retraction_review np:hasAssertion ?ra .
    graph ?ra { ?somebody npx:retracts ?review_np . }
  }
  optional {
#    graph npa:graph { ?update_np vp: ?pubkey . }
    ?update_np np:hasPublicationInfo ?xi .
    graph ?xi { ?update_np lf:isUpdateOf ?class_np . }
  }
#  graph npa:graph { ?resp_np vp: ?pubkey . }
  ?resp_np np:hasAssertion ?respa .
  graph ?respa { ?resp_comment lf:isResponseTo ?review_np . }
  filter not exists {
#    graph npa:graph { ?retraction_resp vp: ?pubkey . }
    ?retraction_resp np:hasAssertion ?respra .
    graph ?respra { ?somebody_resp_np npx:retracts ?resp_np . }
  }
  optional {
#    graph npa:graph { ?newversion_response vp: ?pubkey . }
    ?newversion_response np:hasAssertion ?respra .
    graph ?respra { ?newversion_response npx:supersedes ?resp_np . }
  }
}
